//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Development\Projects\MetaCode\project\MetaCode\MetaCode.Compiler\Grammar\TreeSelector.g4 by ANTLR 4.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace MetaCode.Compiler.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class TreeSelectorLexer : Lexer {
	public const int
		T__5=1, T__4=2, T__3=3, T__2=4, T__1=5, T__0=6, WHILE=7, FOREACH=8, FUNCTION=9, 
		IF=10, TRUE_STATEMENT=11, ELSE_STATEMENT=12, BODY=13, EXPRESSION=14, VARIABLE=15, 
		DECLARATION=16, ALL=17, ID=18, WHITESPACE=19, NEWLINE=20;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"']'", "'>'", "','", "'+'", "'['", "'='", "'while'", "'foreach'", "'function'", 
		"'if'", "'else-if'", "'else'", "'body'", "'expression'", "'variable'", 
		"'declaration'", "'*'", "ID", "WHITESPACE", "NEWLINE"
	};
	public static readonly string[] ruleNames = {
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "WHILE", "FOREACH", "FUNCTION", 
		"IF", "TRUE_STATEMENT", "ELSE_STATEMENT", "BODY", "EXPRESSION", "VARIABLE", 
		"DECLARATION", "ALL", "ID", "LETTER", "WHITESPACE", "NEWLINE"
	};


	public TreeSelectorLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "TreeSelector.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x16\xA5\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t"+
		"\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v"+
		"\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r"+
		"\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x5\x13\x89\n"+
		"\x13\x3\x13\x3\x13\x5\x13\x8D\n\x13\x3\x13\x3\x13\a\x13\x91\n\x13\f\x13"+
		"\xE\x13\x94\v\x13\x3\x14\x3\x14\x3\x15\x6\x15\x99\n\x15\r\x15\xE\x15\x9A"+
		"\x3\x15\x3\x15\x3\x16\x5\x16\xA0\n\x16\x3\x16\x3\x16\x3\x16\x3\x16\x2"+
		"\x2\x2\x17\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11"+
		"\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2"+
		"\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x2)\x2\x15+\x2\x16\x3\x2\x5\x5\x2//"+
		"\x32;\x61\x61\x4\x2\x43\\\x63|\x4\x2\v\v\"\"\xA9\x2\x3\x3\x2\x2\x2\x2"+
		"\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2"+
		"\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2"+
		"\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2"+
		"\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2"+
		"\x2\x2\x2%\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x3-\x3\x2\x2\x2"+
		"\x5/\x3\x2\x2\x2\a\x31\x3\x2\x2\x2\t\x33\x3\x2\x2\x2\v\x35\x3\x2\x2\x2"+
		"\r\x37\x3\x2\x2\x2\xF\x39\x3\x2\x2\x2\x11?\x3\x2\x2\x2\x13G\x3\x2\x2\x2"+
		"\x15P\x3\x2\x2\x2\x17S\x3\x2\x2\x2\x19[\x3\x2\x2\x2\x1B`\x3\x2\x2\x2\x1D"+
		"\x65\x3\x2\x2\x2\x1Fp\x3\x2\x2\x2!y\x3\x2\x2\x2#\x85\x3\x2\x2\x2%\x88"+
		"\x3\x2\x2\x2\'\x95\x3\x2\x2\x2)\x98\x3\x2\x2\x2+\x9F\x3\x2\x2\x2-.\a_"+
		"\x2\x2.\x4\x3\x2\x2\x2/\x30\a@\x2\x2\x30\x6\x3\x2\x2\x2\x31\x32\a.\x2"+
		"\x2\x32\b\x3\x2\x2\x2\x33\x34\a-\x2\x2\x34\n\x3\x2\x2\x2\x35\x36\a]\x2"+
		"\x2\x36\f\x3\x2\x2\x2\x37\x38\a?\x2\x2\x38\xE\x3\x2\x2\x2\x39:\ay\x2\x2"+
		":;\aj\x2\x2;<\ak\x2\x2<=\an\x2\x2=>\ag\x2\x2>\x10\x3\x2\x2\x2?@\ah\x2"+
		"\x2@\x41\aq\x2\x2\x41\x42\at\x2\x2\x42\x43\ag\x2\x2\x43\x44\a\x63\x2\x2"+
		"\x44\x45\a\x65\x2\x2\x45\x46\aj\x2\x2\x46\x12\x3\x2\x2\x2GH\ah\x2\x2H"+
		"I\aw\x2\x2IJ\ap\x2\x2JK\a\x65\x2\x2KL\av\x2\x2LM\ak\x2\x2MN\aq\x2\x2N"+
		"O\ap\x2\x2O\x14\x3\x2\x2\x2PQ\ak\x2\x2QR\ah\x2\x2R\x16\x3\x2\x2\x2ST\a"+
		"g\x2\x2TU\an\x2\x2UV\au\x2\x2VW\ag\x2\x2WX\a/\x2\x2XY\ak\x2\x2YZ\ah\x2"+
		"\x2Z\x18\x3\x2\x2\x2[\\\ag\x2\x2\\]\an\x2\x2]^\au\x2\x2^_\ag\x2\x2_\x1A"+
		"\x3\x2\x2\x2`\x61\a\x64\x2\x2\x61\x62\aq\x2\x2\x62\x63\a\x66\x2\x2\x63"+
		"\x64\a{\x2\x2\x64\x1C\x3\x2\x2\x2\x65\x66\ag\x2\x2\x66g\az\x2\x2gh\ar"+
		"\x2\x2hi\at\x2\x2ij\ag\x2\x2jk\au\x2\x2kl\au\x2\x2lm\ak\x2\x2mn\aq\x2"+
		"\x2no\ap\x2\x2o\x1E\x3\x2\x2\x2pq\ax\x2\x2qr\a\x63\x2\x2rs\at\x2\x2st"+
		"\ak\x2\x2tu\a\x63\x2\x2uv\a\x64\x2\x2vw\an\x2\x2wx\ag\x2\x2x \x3\x2\x2"+
		"\x2yz\a\x66\x2\x2z{\ag\x2\x2{|\a\x65\x2\x2|}\an\x2\x2}~\a\x63\x2\x2~\x7F"+
		"\at\x2\x2\x7F\x80\a\x63\x2\x2\x80\x81\av\x2\x2\x81\x82\ak\x2\x2\x82\x83"+
		"\aq\x2\x2\x83\x84\ap\x2\x2\x84\"\x3\x2\x2\x2\x85\x86\a,\x2\x2\x86$\x3"+
		"\x2\x2\x2\x87\x89\a\x42\x2\x2\x88\x87\x3\x2\x2\x2\x88\x89\x3\x2\x2\x2"+
		"\x89\x8C\x3\x2\x2\x2\x8A\x8D\x5\'\x14\x2\x8B\x8D\a\x61\x2\x2\x8C\x8A\x3"+
		"\x2\x2\x2\x8C\x8B\x3\x2\x2\x2\x8D\x92\x3\x2\x2\x2\x8E\x91\x5\'\x14\x2"+
		"\x8F\x91\t\x2\x2\x2\x90\x8E\x3\x2\x2\x2\x90\x8F\x3\x2\x2\x2\x91\x94\x3"+
		"\x2\x2\x2\x92\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2\x93&\x3\x2\x2\x2\x94"+
		"\x92\x3\x2\x2\x2\x95\x96\t\x3\x2\x2\x96(\x3\x2\x2\x2\x97\x99\t\x4\x2\x2"+
		"\x98\x97\x3\x2\x2\x2\x99\x9A\x3\x2\x2\x2\x9A\x98\x3\x2\x2\x2\x9A\x9B\x3"+
		"\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C\x9D\b\x15\x2\x2\x9D*\x3\x2\x2\x2\x9E"+
		"\xA0\a\xF\x2\x2\x9F\x9E\x3\x2\x2\x2\x9F\xA0\x3\x2\x2\x2\xA0\xA1\x3\x2"+
		"\x2\x2\xA1\xA2\a\f\x2\x2\xA2\xA3\x3\x2\x2\x2\xA3\xA4\b\x16\x2\x2\xA4,"+
		"\x3\x2\x2\x2\t\x2\x88\x8C\x90\x92\x9A\x9F\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace MetaCode.Compiler.Grammar
