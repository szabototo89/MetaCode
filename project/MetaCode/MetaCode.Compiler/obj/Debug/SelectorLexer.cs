//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Development\Projects\MetaCode\project\MetaCode\MetaCode.Compiler\Grammar\TreeSelector.g4 by ANTLR 4.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace MetaCode.Compiler.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class SelectorLexer : Lexer {
	public const int
		T__4=1, T__3=2, T__2=3, T__1=4, T__0=5, ID=6, WHITESPACE=7, NEWLINE=8;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"']'", "'>'", "','", "'['", "'='", "ID", "WHITESPACE", "NEWLINE"
	};
	public static readonly string[] ruleNames = {
		"T__4", "T__3", "T__2", "T__1", "T__0", "ID", "LETTER", "WHITESPACE", 
		"NEWLINE"
	};


	public SelectorLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "TreeSelector.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\n@\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t"+
		"\t\t\x4\n\t\n\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3"+
		"\x6\x3\a\x5\a!\n\a\x3\a\x3\a\x5\a%\n\a\x3\a\x3\a\a\a)\n\a\f\a\xE\a,\v"+
		"\a\x3\a\x5\a/\n\a\x3\b\x3\b\x3\t\x6\t\x34\n\t\r\t\xE\t\x35\x3\t\x3\t\x3"+
		"\n\x5\n;\n\n\x3\n\x3\n\x3\n\x3\n\x2\x2\x2\v\x3\x2\x3\x5\x2\x4\a\x2\x5"+
		"\t\x2\x6\v\x2\a\r\x2\b\xF\x2\x2\x11\x2\t\x13\x2\n\x3\x2\x5\x5\x2//\x32"+
		";\x61\x61\x4\x2\x43\\\x63|\x4\x2\v\v\"\"\x45\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x3\x15\x3\x2\x2\x2\x5\x17"+
		"\x3\x2\x2\x2\a\x19\x3\x2\x2\x2\t\x1B\x3\x2\x2\x2\v\x1D\x3\x2\x2\x2\r."+
		"\x3\x2\x2\x2\xF\x30\x3\x2\x2\x2\x11\x33\x3\x2\x2\x2\x13:\x3\x2\x2\x2\x15"+
		"\x16\a_\x2\x2\x16\x4\x3\x2\x2\x2\x17\x18\a@\x2\x2\x18\x6\x3\x2\x2\x2\x19"+
		"\x1A\a.\x2\x2\x1A\b\x3\x2\x2\x2\x1B\x1C\a]\x2\x2\x1C\n\x3\x2\x2\x2\x1D"+
		"\x1E\a?\x2\x2\x1E\f\x3\x2\x2\x2\x1F!\a\x42\x2\x2 \x1F\x3\x2\x2\x2 !\x3"+
		"\x2\x2\x2!$\x3\x2\x2\x2\"%\x5\xF\b\x2#%\a\x61\x2\x2$\"\x3\x2\x2\x2$#\x3"+
		"\x2\x2\x2%*\x3\x2\x2\x2&)\x5\xF\b\x2\')\t\x2\x2\x2(&\x3\x2\x2\x2(\'\x3"+
		"\x2\x2\x2),\x3\x2\x2\x2*(\x3\x2\x2\x2*+\x3\x2\x2\x2+/\x3\x2\x2\x2,*\x3"+
		"\x2\x2\x2-/\a,\x2\x2. \x3\x2\x2\x2.-\x3\x2\x2\x2/\xE\x3\x2\x2\x2\x30\x31"+
		"\t\x3\x2\x2\x31\x10\x3\x2\x2\x2\x32\x34\t\x4\x2\x2\x33\x32\x3\x2\x2\x2"+
		"\x34\x35\x3\x2\x2\x2\x35\x33\x3\x2\x2\x2\x35\x36\x3\x2\x2\x2\x36\x37\x3"+
		"\x2\x2\x2\x37\x38\b\t\x2\x2\x38\x12\x3\x2\x2\x2\x39;\a\xF\x2\x2:\x39\x3"+
		"\x2\x2\x2:;\x3\x2\x2\x2;<\x3\x2\x2\x2<=\a\f\x2\x2=>\x3\x2\x2\x2>?\b\n"+
		"\x2\x2?\x14\x3\x2\x2\x2\n\x2 $(*.\x35:\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace MetaCode.Compiler.Grammar
