//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:\Development\Projects\MetaCode\project\MetaCode\MetaCode.Compiler\Grammar\MetaCode.g4 by ANTLR 4.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace MetaCode.Compiler.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class MetaCodeLexer : Lexer {
	public const int
		T__7=1, T__6=2, T__5=3, T__4=4, T__3=5, T__2=6, T__1=7, T__0=8, FUNCTION=9, 
		FOREACH=10, WHILE=11, IF=12, ELSE=13, DO=14, END=15, BOOLEAN=16, SKIP=17, 
		VAR=18, IN=19, ASSIGN=20, LEFT_PARENTHESIS=21, RIGHT_PARENTHESIS=22, ID=23, 
		COMMENT=24, MULTILINE_COMMENT=25, ATTRIBUTE_ID=26, STRING=27, NUMBER=28, 
		WHITESPACE=29, NEWLINE=30;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"']'", "'.'", "','", "'by'", "'['", "':'", "';'", "'..'", "'function'", 
		"'foreach'", "'while'", "'if'", "'else'", "'do'", "'end'", "BOOLEAN", 
		"'skip'", "'var'", "'in'", "'='", "'('", "')'", "ID", "COMMENT", "MULTILINE_COMMENT", 
		"ATTRIBUTE_ID", "STRING", "NUMBER", "WHITESPACE", "NEWLINE"
	};
	public static readonly string[] ruleNames = {
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "FUNCTION", 
		"FOREACH", "WHILE", "IF", "ELSE", "DO", "END", "BOOLEAN", "SKIP", "VAR", 
		"IN", "ASSIGN", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", "ID", "COMMENT", 
		"MULTILINE_COMMENT", "ATTRIBUTE_ID", "LETTER", "STRING", "NUMBER", "INT", 
		"FLOAT", "DIGIT", "WHITESPACE", "NEWLINE"
	};


	public MetaCodeLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "MetaCode.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2 \x106\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3"+
		"\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n"+
		"\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f"+
		"\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3"+
		"\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x5\x11\x89\n\x11\x3\x12\x3\x12"+
		"\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14"+
		"\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x5\x18\x9F\n"+
		"\x18\x3\x18\x3\x18\a\x18\xA3\n\x18\f\x18\xE\x18\xA6\v\x18\x3\x19\x3\x19"+
		"\x3\x19\x3\x19\a\x19\xAC\n\x19\f\x19\xE\x19\xAF\v\x19\x3\x19\x3\x19\x3"+
		"\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\a\x1A\xB9\n\x1A\f\x1A\xE\x1A\xBC"+
		"\v\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x5\x1B"+
		"\xC6\n\x1B\x3\x1B\x3\x1B\a\x1B\xCA\n\x1B\f\x1B\xE\x1B\xCD\v\x1B\x3\x1C"+
		"\x3\x1C\x3\x1D\x3\x1D\a\x1D\xD3\n\x1D\f\x1D\xE\x1D\xD6\v\x1D\x3\x1D\x3"+
		"\x1D\x3\x1E\x3\x1E\x5\x1E\xDC\n\x1E\x3\x1F\x6\x1F\xDF\n\x1F\r\x1F\xE\x1F"+
		"\xE0\x3 \x6 \xE4\n \r \xE \xE5\x3 \x3 \a \xEA\n \f \xE \xED\v \x3 \x3"+
		" \x6 \xF1\n \r \xE \xF2\x5 \xF5\n \x3!\x3!\x3\"\x6\"\xFA\n\"\r\"\xE\""+
		"\xFB\x3\"\x3\"\x3#\x5#\x101\n#\x3#\x3#\x3#\x3#\x5\xAD\xBA\xD4\x2\x2$\x3"+
		"\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2"+
		"\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12"+
		"#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33"+
		"\x2\x1B\x35\x2\x1C\x37\x2\x2\x39\x2\x1D;\x2\x1E=\x2\x2?\x2\x2\x41\x2\x2"+
		"\x43\x2\x1F\x45\x2 \x3\x2\a\x4\x2\x32;\x61\x61\x5\x2//\x32;\x61\x61\x4"+
		"\x2\x43\\\x63|\x3\x2\x32;\x4\x2\v\v\"\"\x113\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2"+
		"\x2\x45\x3\x2\x2\x2\x3G\x3\x2\x2\x2\x5I\x3\x2\x2\x2\aK\x3\x2\x2\x2\tM"+
		"\x3\x2\x2\x2\vP\x3\x2\x2\x2\rR\x3\x2\x2\x2\xFT\x3\x2\x2\x2\x11V\x3\x2"+
		"\x2\x2\x13Y\x3\x2\x2\x2\x15\x62\x3\x2\x2\x2\x17j\x3\x2\x2\x2\x19p\x3\x2"+
		"\x2\x2\x1Bs\x3\x2\x2\x2\x1Dx\x3\x2\x2\x2\x1F{\x3\x2\x2\x2!\x88\x3\x2\x2"+
		"\x2#\x8A\x3\x2\x2\x2%\x8F\x3\x2\x2\x2\'\x93\x3\x2\x2\x2)\x96\x3\x2\x2"+
		"\x2+\x98\x3\x2\x2\x2-\x9A\x3\x2\x2\x2/\x9E\x3\x2\x2\x2\x31\xA7\x3\x2\x2"+
		"\x2\x33\xB4\x3\x2\x2\x2\x35\xC2\x3\x2\x2\x2\x37\xCE\x3\x2\x2\x2\x39\xD0"+
		"\x3\x2\x2\x2;\xDB\x3\x2\x2\x2=\xDE\x3\x2\x2\x2?\xF4\x3\x2\x2\x2\x41\xF6"+
		"\x3\x2\x2\x2\x43\xF9\x3\x2\x2\x2\x45\x100\x3\x2\x2\x2GH\a_\x2\x2H\x4\x3"+
		"\x2\x2\x2IJ\a\x30\x2\x2J\x6\x3\x2\x2\x2KL\a.\x2\x2L\b\x3\x2\x2\x2MN\a"+
		"\x64\x2\x2NO\a{\x2\x2O\n\x3\x2\x2\x2PQ\a]\x2\x2Q\f\x3\x2\x2\x2RS\a<\x2"+
		"\x2S\xE\x3\x2\x2\x2TU\a=\x2\x2U\x10\x3\x2\x2\x2VW\a\x30\x2\x2WX\a\x30"+
		"\x2\x2X\x12\x3\x2\x2\x2YZ\ah\x2\x2Z[\aw\x2\x2[\\\ap\x2\x2\\]\a\x65\x2"+
		"\x2]^\av\x2\x2^_\ak\x2\x2_`\aq\x2\x2`\x61\ap\x2\x2\x61\x14\x3\x2\x2\x2"+
		"\x62\x63\ah\x2\x2\x63\x64\aq\x2\x2\x64\x65\at\x2\x2\x65\x66\ag\x2\x2\x66"+
		"g\a\x63\x2\x2gh\a\x65\x2\x2hi\aj\x2\x2i\x16\x3\x2\x2\x2jk\ay\x2\x2kl\a"+
		"j\x2\x2lm\ak\x2\x2mn\an\x2\x2no\ag\x2\x2o\x18\x3\x2\x2\x2pq\ak\x2\x2q"+
		"r\ah\x2\x2r\x1A\x3\x2\x2\x2st\ag\x2\x2tu\an\x2\x2uv\au\x2\x2vw\ag\x2\x2"+
		"w\x1C\x3\x2\x2\x2xy\a\x66\x2\x2yz\aq\x2\x2z\x1E\x3\x2\x2\x2{|\ag\x2\x2"+
		"|}\ap\x2\x2}~\a\x66\x2\x2~ \x3\x2\x2\x2\x7F\x80\ah\x2\x2\x80\x81\a\x63"+
		"\x2\x2\x81\x82\an\x2\x2\x82\x83\au\x2\x2\x83\x89\ag\x2\x2\x84\x85\av\x2"+
		"\x2\x85\x86\at\x2\x2\x86\x87\aw\x2\x2\x87\x89\ag\x2\x2\x88\x7F\x3\x2\x2"+
		"\x2\x88\x84\x3\x2\x2\x2\x89\"\x3\x2\x2\x2\x8A\x8B\au\x2\x2\x8B\x8C\am"+
		"\x2\x2\x8C\x8D\ak\x2\x2\x8D\x8E\ar\x2\x2\x8E$\x3\x2\x2\x2\x8F\x90\ax\x2"+
		"\x2\x90\x91\a\x63\x2\x2\x91\x92\at\x2\x2\x92&\x3\x2\x2\x2\x93\x94\ak\x2"+
		"\x2\x94\x95\ap\x2\x2\x95(\x3\x2\x2\x2\x96\x97\a?\x2\x2\x97*\x3\x2\x2\x2"+
		"\x98\x99\a*\x2\x2\x99,\x3\x2\x2\x2\x9A\x9B\a+\x2\x2\x9B.\x3\x2\x2\x2\x9C"+
		"\x9F\x5\x37\x1C\x2\x9D\x9F\a\x61\x2\x2\x9E\x9C\x3\x2\x2\x2\x9E\x9D\x3"+
		"\x2\x2\x2\x9F\xA4\x3\x2\x2\x2\xA0\xA3\x5\x37\x1C\x2\xA1\xA3\t\x2\x2\x2"+
		"\xA2\xA0\x3\x2\x2\x2\xA2\xA1\x3\x2\x2\x2\xA3\xA6\x3\x2\x2\x2\xA4\xA2\x3"+
		"\x2\x2\x2\xA4\xA5\x3\x2\x2\x2\xA5\x30\x3\x2\x2\x2\xA6\xA4\x3\x2\x2\x2"+
		"\xA7\xA8\a\x31\x2\x2\xA8\xA9\a\x31\x2\x2\xA9\xAD\x3\x2\x2\x2\xAA\xAC\v"+
		"\x2\x2\x2\xAB\xAA\x3\x2\x2\x2\xAC\xAF\x3\x2\x2\x2\xAD\xAE\x3\x2\x2\x2"+
		"\xAD\xAB\x3\x2\x2\x2\xAE\xB0\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2\xB0\xB1\x5"+
		"\x45#\x2\xB1\xB2\x3\x2\x2\x2\xB2\xB3\b\x19\x2\x2\xB3\x32\x3\x2\x2\x2\xB4"+
		"\xB5\a\x31\x2\x2\xB5\xB6\a,\x2\x2\xB6\xBA\x3\x2\x2\x2\xB7\xB9\v\x2\x2"+
		"\x2\xB8\xB7\x3\x2\x2\x2\xB9\xBC\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBA\xB8"+
		"\x3\x2\x2\x2\xBB\xBD\x3\x2\x2\x2\xBC\xBA\x3\x2\x2\x2\xBD\xBE\a,\x2\x2"+
		"\xBE\xBF\a\x31\x2\x2\xBF\xC0\x3\x2\x2\x2\xC0\xC1\b\x1A\x2\x2\xC1\x34\x3"+
		"\x2\x2\x2\xC2\xC5\a\x42\x2\x2\xC3\xC6\x5\x37\x1C\x2\xC4\xC6\a\x61\x2\x2"+
		"\xC5\xC3\x3\x2\x2\x2\xC5\xC4\x3\x2\x2\x2\xC6\xCB\x3\x2\x2\x2\xC7\xCA\x5"+
		"\x37\x1C\x2\xC8\xCA\t\x3\x2\x2\xC9\xC7\x3\x2\x2\x2\xC9\xC8\x3\x2\x2\x2"+
		"\xCA\xCD\x3\x2\x2\x2\xCB\xC9\x3\x2\x2\x2\xCB\xCC\x3\x2\x2\x2\xCC\x36\x3"+
		"\x2\x2\x2\xCD\xCB\x3\x2\x2\x2\xCE\xCF\t\x4\x2\x2\xCF\x38\x3\x2\x2\x2\xD0"+
		"\xD4\a$\x2\x2\xD1\xD3\v\x2\x2\x2\xD2\xD1\x3\x2\x2\x2\xD3\xD6\x3\x2\x2"+
		"\x2\xD4\xD5\x3\x2\x2\x2\xD4\xD2\x3\x2\x2\x2\xD5\xD7\x3\x2\x2\x2\xD6\xD4"+
		"\x3\x2\x2\x2\xD7\xD8\a$\x2\x2\xD8:\x3\x2\x2\x2\xD9\xDC\x5=\x1F\x2\xDA"+
		"\xDC\x5? \x2\xDB\xD9\x3\x2\x2\x2\xDB\xDA\x3\x2\x2\x2\xDC<\x3\x2\x2\x2"+
		"\xDD\xDF\x5\x41!\x2\xDE\xDD\x3\x2\x2\x2\xDF\xE0\x3\x2\x2\x2\xE0\xDE\x3"+
		"\x2\x2\x2\xE0\xE1\x3\x2\x2\x2\xE1>\x3\x2\x2\x2\xE2\xE4\x5\x41!\x2\xE3"+
		"\xE2\x3\x2\x2\x2\xE4\xE5\x3\x2\x2\x2\xE5\xE3\x3\x2\x2\x2\xE5\xE6\x3\x2"+
		"\x2\x2\xE6\xE7\x3\x2\x2\x2\xE7\xEB\a\x30\x2\x2\xE8\xEA\x5\x41!\x2\xE9"+
		"\xE8\x3\x2\x2\x2\xEA\xED\x3\x2\x2\x2\xEB\xE9\x3\x2\x2\x2\xEB\xEC\x3\x2"+
		"\x2\x2\xEC\xF5\x3\x2\x2\x2\xED\xEB\x3\x2\x2\x2\xEE\xF0\a\x30\x2\x2\xEF"+
		"\xF1\x5\x41!\x2\xF0\xEF\x3\x2\x2\x2\xF1\xF2\x3\x2\x2\x2\xF2\xF0\x3\x2"+
		"\x2\x2\xF2\xF3\x3\x2\x2\x2\xF3\xF5\x3\x2\x2\x2\xF4\xE3\x3\x2\x2\x2\xF4"+
		"\xEE\x3\x2\x2\x2\xF5@\x3\x2\x2\x2\xF6\xF7\t\x5\x2\x2\xF7\x42\x3\x2\x2"+
		"\x2\xF8\xFA\t\x6\x2\x2\xF9\xF8\x3\x2\x2\x2\xFA\xFB\x3\x2\x2\x2\xFB\xF9"+
		"\x3\x2\x2\x2\xFB\xFC\x3\x2\x2\x2\xFC\xFD\x3\x2\x2\x2\xFD\xFE\b\"\x2\x2"+
		"\xFE\x44\x3\x2\x2\x2\xFF\x101\a\xF\x2\x2\x100\xFF\x3\x2\x2\x2\x100\x101"+
		"\x3\x2\x2\x2\x101\x102\x3\x2\x2\x2\x102\x103\a\f\x2\x2\x103\x104\x3\x2"+
		"\x2\x2\x104\x105\b#\x2\x2\x105\x46\x3\x2\x2\x2\x15\x2\x88\x9E\xA2\xA4"+
		"\xAD\xBA\xC5\xC9\xCB\xD4\xDB\xE0\xE5\xEB\xF2\xF4\xFB\x100\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace MetaCode.Compiler.Grammar
