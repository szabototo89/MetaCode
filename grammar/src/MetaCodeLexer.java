// Generated from ../MetaCode.g4 by ANTLR 4.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MetaCodeLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__19=1, T__18=2, T__17=3, T__16=4, T__15=5, T__14=6, T__13=7, T__12=8, 
		T__11=9, T__10=10, T__9=11, T__8=12, T__7=13, T__6=14, T__5=15, T__4=16, 
		T__3=17, T__2=18, T__1=19, T__0=20, FUNCTION=21, FOREACH=22, WHILE=23, 
		IF=24, ELSE=25, DO=26, END=27, BOOLEAN=28, IMPLICIT=29, EXPLICIT=30, MACRO=31, 
		SKIP=32, VAR=33, IN=34, ASSIGN=35, AND=36, OR=37, NOT=38, NULL=39, RETURN=40, 
		LEFT_PARENTHESIS=41, RIGHT_PARENTHESIS=42, ID=43, COMMENT=44, MULTILINE_COMMENT=45, 
		TREE_SELECTOR=46, ATTRIBUTE_ID=47, STRING=48, NUMBER=49, WHITESPACE=50, 
		NEWLINE=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'.'", "','", "'+'", "'*'", "'-'", "'attribute'", "'['", "':'", 
		"'<'", "'object'", "'!='", "';'", "'<='", "'to'", "'>'", "'by'", "'/'", 
		"'=='", "'>='", "'function'", "'foreach'", "'while'", "'if'", "'else'", 
		"'do'", "'end'", "BOOLEAN", "'implicit'", "'explicit'", "'macro'", "'skip'", 
		"'var'", "'in'", "'='", "'and'", "'or'", "'not'", "'null'", "'return'", 
		"'('", "')'", "ID", "COMMENT", "MULTILINE_COMMENT", "TREE_SELECTOR", "ATTRIBUTE_ID", 
		"STRING", "NUMBER", "WHITESPACE", "NEWLINE"
	};
	public static final String[] ruleNames = {
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "FUNCTION", "FOREACH", "WHILE", "IF", "ELSE", 
		"DO", "END", "BOOLEAN", "IMPLICIT", "EXPLICIT", "MACRO", "SKIP", "VAR", 
		"IN", "ASSIGN", "AND", "OR", "NOT", "NULL", "RETURN", "LEFT_PARENTHESIS", 
		"RIGHT_PARENTHESIS", "ID", "COMMENT", "MULTILINE_COMMENT", "TREE_SELECTOR", 
		"ATTRIBUTE_ID", "LETTER", "STRING", "NUMBER", "INT", "FLOAT", "DIGIT", 
		"WHITESPACE", "NEWLINE"
	};


	public MetaCodeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MetaCode.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\65\u0190\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\3\3\3\3\4\3\4\3\5"+
		"\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17"+
		"\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\5\35\u00dc\n\35\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3"+
		"$\3$\3%\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3"+
		")\3)\3)\3*\3*\3+\3+\3,\3,\5,\u0121\n,\3,\3,\7,\u0125\n,\f,\16,\u0128\13"+
		",\3-\3-\3-\3-\7-\u012e\n-\f-\16-\u0131\13-\3-\3-\3-\3-\3.\3.\3.\3.\7."+
		"\u013b\n.\f.\16.\u013e\13.\3.\3.\3.\3.\3.\3/\3/\6/\u0147\n/\r/\16/\u0148"+
		"\3/\3/\3\60\3\60\3\60\5\60\u0150\n\60\3\60\3\60\7\60\u0154\n\60\f\60\16"+
		"\60\u0157\13\60\3\61\3\61\3\62\3\62\7\62\u015d\n\62\f\62\16\62\u0160\13"+
		"\62\3\62\3\62\3\63\3\63\5\63\u0166\n\63\3\64\6\64\u0169\n\64\r\64\16\64"+
		"\u016a\3\65\6\65\u016e\n\65\r\65\16\65\u016f\3\65\3\65\7\65\u0174\n\65"+
		"\f\65\16\65\u0177\13\65\3\65\3\65\6\65\u017b\n\65\r\65\16\65\u017c\5\65"+
		"\u017f\n\65\3\66\3\66\3\67\6\67\u0184\n\67\r\67\16\67\u0185\3\67\3\67"+
		"\38\58\u018b\n8\38\38\38\38\6\u012f\u013c\u0148\u015e\29\3\3\5\4\7\5\t"+
		"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\2c\62e\63g\2i\2k\2m\64o\65\3\2\7\4\2\62"+
		";aa\5\2//\62;aa\4\2C\\c|\3\2\62;\4\2\13\13\"\"\u019e\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2"+
		"\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2"+
		"m\3\2\2\2\2o\3\2\2\2\3q\3\2\2\2\5s\3\2\2\2\7u\3\2\2\2\tw\3\2\2\2\13y\3"+
		"\2\2\2\r{\3\2\2\2\17}\3\2\2\2\21\u0087\3\2\2\2\23\u0089\3\2\2\2\25\u008b"+
		"\3\2\2\2\27\u008d\3\2\2\2\31\u0094\3\2\2\2\33\u0097\3\2\2\2\35\u0099\3"+
		"\2\2\2\37\u009c\3\2\2\2!\u009f\3\2\2\2#\u00a1\3\2\2\2%\u00a4\3\2\2\2\'"+
		"\u00a6\3\2\2\2)\u00a9\3\2\2\2+\u00ac\3\2\2\2-\u00b5\3\2\2\2/\u00bd\3\2"+
		"\2\2\61\u00c3\3\2\2\2\63\u00c6\3\2\2\2\65\u00cb\3\2\2\2\67\u00ce\3\2\2"+
		"\29\u00db\3\2\2\2;\u00dd\3\2\2\2=\u00e6\3\2\2\2?\u00ef\3\2\2\2A\u00f5"+
		"\3\2\2\2C\u00fa\3\2\2\2E\u00fe\3\2\2\2G\u0101\3\2\2\2I\u0103\3\2\2\2K"+
		"\u0107\3\2\2\2M\u010a\3\2\2\2O\u010e\3\2\2\2Q\u0113\3\2\2\2S\u011a\3\2"+
		"\2\2U\u011c\3\2\2\2W\u0120\3\2\2\2Y\u0129\3\2\2\2[\u0136\3\2\2\2]\u0144"+
		"\3\2\2\2_\u014c\3\2\2\2a\u0158\3\2\2\2c\u015a\3\2\2\2e\u0165\3\2\2\2g"+
		"\u0168\3\2\2\2i\u017e\3\2\2\2k\u0180\3\2\2\2m\u0183\3\2\2\2o\u018a\3\2"+
		"\2\2qr\7_\2\2r\4\3\2\2\2st\7\60\2\2t\6\3\2\2\2uv\7.\2\2v\b\3\2\2\2wx\7"+
		"-\2\2x\n\3\2\2\2yz\7,\2\2z\f\3\2\2\2{|\7/\2\2|\16\3\2\2\2}~\7c\2\2~\177"+
		"\7v\2\2\177\u0080\7v\2\2\u0080\u0081\7t\2\2\u0081\u0082\7k\2\2\u0082\u0083"+
		"\7d\2\2\u0083\u0084\7w\2\2\u0084\u0085\7v\2\2\u0085\u0086\7g\2\2\u0086"+
		"\20\3\2\2\2\u0087\u0088\7]\2\2\u0088\22\3\2\2\2\u0089\u008a\7<\2\2\u008a"+
		"\24\3\2\2\2\u008b\u008c\7>\2\2\u008c\26\3\2\2\2\u008d\u008e\7q\2\2\u008e"+
		"\u008f\7d\2\2\u008f\u0090\7l\2\2\u0090\u0091\7g\2\2\u0091\u0092\7e\2\2"+
		"\u0092\u0093\7v\2\2\u0093\30\3\2\2\2\u0094\u0095\7#\2\2\u0095\u0096\7"+
		"?\2\2\u0096\32\3\2\2\2\u0097\u0098\7=\2\2\u0098\34\3\2\2\2\u0099\u009a"+
		"\7>\2\2\u009a\u009b\7?\2\2\u009b\36\3\2\2\2\u009c\u009d\7v\2\2\u009d\u009e"+
		"\7q\2\2\u009e \3\2\2\2\u009f\u00a0\7@\2\2\u00a0\"\3\2\2\2\u00a1\u00a2"+
		"\7d\2\2\u00a2\u00a3\7{\2\2\u00a3$\3\2\2\2\u00a4\u00a5\7\61\2\2\u00a5&"+
		"\3\2\2\2\u00a6\u00a7\7?\2\2\u00a7\u00a8\7?\2\2\u00a8(\3\2\2\2\u00a9\u00aa"+
		"\7@\2\2\u00aa\u00ab\7?\2\2\u00ab*\3\2\2\2\u00ac\u00ad\7h\2\2\u00ad\u00ae"+
		"\7w\2\2\u00ae\u00af\7p\2\2\u00af\u00b0\7e\2\2\u00b0\u00b1\7v\2\2\u00b1"+
		"\u00b2\7k\2\2\u00b2\u00b3\7q\2\2\u00b3\u00b4\7p\2\2\u00b4,\3\2\2\2\u00b5"+
		"\u00b6\7h\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8\7t\2\2\u00b8\u00b9\7g\2\2"+
		"\u00b9\u00ba\7c\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7j\2\2\u00bc.\3\2\2"+
		"\2\u00bd\u00be\7y\2\2\u00be\u00bf\7j\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1"+
		"\7n\2\2\u00c1\u00c2\7g\2\2\u00c2\60\3\2\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5"+
		"\7h\2\2\u00c5\62\3\2\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9"+
		"\7u\2\2\u00c9\u00ca\7g\2\2\u00ca\64\3\2\2\2\u00cb\u00cc\7f\2\2\u00cc\u00cd"+
		"\7q\2\2\u00cd\66\3\2\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1"+
		"\7f\2\2\u00d18\3\2\2\2\u00d2\u00d3\7h\2\2\u00d3\u00d4\7c\2\2\u00d4\u00d5"+
		"\7n\2\2\u00d5\u00d6\7u\2\2\u00d6\u00dc\7g\2\2\u00d7\u00d8\7v\2\2\u00d8"+
		"\u00d9\7t\2\2\u00d9\u00da\7w\2\2\u00da\u00dc\7g\2\2\u00db\u00d2\3\2\2"+
		"\2\u00db\u00d7\3\2\2\2\u00dc:\3\2\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7"+
		"o\2\2\u00df\u00e0\7r\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3"+
		"\7e\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5\7v\2\2\u00e5<\3\2\2\2\u00e6\u00e7"+
		"\7g\2\2\u00e7\u00e8\7z\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7n\2\2\u00ea"+
		"\u00eb\7k\2\2\u00eb\u00ec\7e\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee\7v\2\2"+
		"\u00ee>\3\2\2\2\u00ef\u00f0\7o\2\2\u00f0\u00f1\7c\2\2\u00f1\u00f2\7e\2"+
		"\2\u00f2\u00f3\7t\2\2\u00f3\u00f4\7q\2\2\u00f4@\3\2\2\2\u00f5\u00f6\7"+
		"u\2\2\u00f6\u00f7\7m\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7r\2\2\u00f9B"+
		"\3\2\2\2\u00fa\u00fb\7x\2\2\u00fb\u00fc\7c\2\2\u00fc\u00fd\7t\2\2\u00fd"+
		"D\3\2\2\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7p\2\2\u0100F\3\2\2\2\u0101\u0102"+
		"\7?\2\2\u0102H\3\2\2\2\u0103\u0104\7c\2\2\u0104\u0105\7p\2\2\u0105\u0106"+
		"\7f\2\2\u0106J\3\2\2\2\u0107\u0108\7q\2\2\u0108\u0109\7t\2\2\u0109L\3"+
		"\2\2\2\u010a\u010b\7p\2\2\u010b\u010c\7q\2\2\u010c\u010d\7v\2\2\u010d"+
		"N\3\2\2\2\u010e\u010f\7p\2\2\u010f\u0110\7w\2\2\u0110\u0111\7n\2\2\u0111"+
		"\u0112\7n\2\2\u0112P\3\2\2\2\u0113\u0114\7t\2\2\u0114\u0115\7g\2\2\u0115"+
		"\u0116\7v\2\2\u0116\u0117\7w\2\2\u0117\u0118\7t\2\2\u0118\u0119\7p\2\2"+
		"\u0119R\3\2\2\2\u011a\u011b\7*\2\2\u011bT\3\2\2\2\u011c\u011d\7+\2\2\u011d"+
		"V\3\2\2\2\u011e\u0121\5a\61\2\u011f\u0121\7a\2\2\u0120\u011e\3\2\2\2\u0120"+
		"\u011f\3\2\2\2\u0121\u0126\3\2\2\2\u0122\u0125\5a\61\2\u0123\u0125\t\2"+
		"\2\2\u0124\u0122\3\2\2\2\u0124\u0123\3\2\2\2\u0125\u0128\3\2\2\2\u0126"+
		"\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127X\3\2\2\2\u0128\u0126\3\2\2\2"+
		"\u0129\u012a\7\61\2\2\u012a\u012b\7\61\2\2\u012b\u012f\3\2\2\2\u012c\u012e"+
		"\13\2\2\2\u012d\u012c\3\2\2\2\u012e\u0131\3\2\2\2\u012f\u0130\3\2\2\2"+
		"\u012f\u012d\3\2\2\2\u0130\u0132\3\2\2\2\u0131\u012f\3\2\2\2\u0132\u0133"+
		"\5o8\2\u0133\u0134\3\2\2\2\u0134\u0135\b-\2\2\u0135Z\3\2\2\2\u0136\u0137"+
		"\7\61\2\2\u0137\u0138\7,\2\2\u0138\u013c\3\2\2\2\u0139\u013b\13\2\2\2"+
		"\u013a\u0139\3\2\2\2\u013b\u013e\3\2\2\2\u013c\u013d\3\2\2\2\u013c\u013a"+
		"\3\2\2\2\u013d\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f\u0140\7,\2\2\u0140"+
		"\u0141\7\61\2\2\u0141\u0142\3\2\2\2\u0142\u0143\b.\2\2\u0143\\\3\2\2\2"+
		"\u0144\u0146\7}\2\2\u0145\u0147\13\2\2\2\u0146\u0145\3\2\2\2\u0147\u0148"+
		"\3\2\2\2\u0148\u0149\3\2\2\2\u0148\u0146\3\2\2\2\u0149\u014a\3\2\2\2\u014a"+
		"\u014b\7\177\2\2\u014b^\3\2\2\2\u014c\u014f\7B\2\2\u014d\u0150\5a\61\2"+
		"\u014e\u0150\7a\2\2\u014f\u014d\3\2\2\2\u014f\u014e\3\2\2\2\u0150\u0155"+
		"\3\2\2\2\u0151\u0154\5a\61\2\u0152\u0154\t\3\2\2\u0153\u0151\3\2\2\2\u0153"+
		"\u0152\3\2\2\2\u0154\u0157\3\2\2\2\u0155\u0153\3\2\2\2\u0155\u0156\3\2"+
		"\2\2\u0156`\3\2\2\2\u0157\u0155\3\2\2\2\u0158\u0159\t\4\2\2\u0159b\3\2"+
		"\2\2\u015a\u015e\7$\2\2\u015b\u015d\13\2\2\2\u015c\u015b\3\2\2\2\u015d"+
		"\u0160\3\2\2\2\u015e\u015f\3\2\2\2\u015e\u015c\3\2\2\2\u015f\u0161\3\2"+
		"\2\2\u0160\u015e\3\2\2\2\u0161\u0162\7$\2\2\u0162d\3\2\2\2\u0163\u0166"+
		"\5g\64\2\u0164\u0166\5i\65\2\u0165\u0163\3\2\2\2\u0165\u0164\3\2\2\2\u0166"+
		"f\3\2\2\2\u0167\u0169\5k\66\2\u0168\u0167\3\2\2\2\u0169\u016a\3\2\2\2"+
		"\u016a\u0168\3\2\2\2\u016a\u016b\3\2\2\2\u016bh\3\2\2\2\u016c\u016e\5"+
		"k\66\2\u016d\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u016d\3\2\2\2\u016f"+
		"\u0170\3\2\2\2\u0170\u0171\3\2\2\2\u0171\u0175\7\60\2\2\u0172\u0174\5"+
		"k\66\2\u0173\u0172\3\2\2\2\u0174\u0177\3\2\2\2\u0175\u0173\3\2\2\2\u0175"+
		"\u0176\3\2\2\2\u0176\u017f\3\2\2\2\u0177\u0175\3\2\2\2\u0178\u017a\7\60"+
		"\2\2\u0179\u017b\5k\66\2\u017a\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017c"+
		"\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017f\3\2\2\2\u017e\u016d\3\2"+
		"\2\2\u017e\u0178\3\2\2\2\u017fj\3\2\2\2\u0180\u0181\t\5\2\2\u0181l\3\2"+
		"\2\2\u0182\u0184\t\6\2\2\u0183\u0182\3\2\2\2\u0184\u0185\3\2\2\2\u0185"+
		"\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0187\3\2\2\2\u0187\u0188\b\67"+
		"\2\2\u0188n\3\2\2\2\u0189\u018b\7\17\2\2\u018a\u0189\3\2\2\2\u018a\u018b"+
		"\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018d\7\f\2\2\u018d\u018e\3\2\2\2\u018e"+
		"\u018f\b8\2\2\u018fp\3\2\2\2\26\2\u00db\u0120\u0124\u0126\u012f\u013c"+
		"\u0148\u014f\u0153\u0155\u015e\u0165\u016a\u016f\u0175\u017c\u017e\u0185"+
		"\u018a\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}